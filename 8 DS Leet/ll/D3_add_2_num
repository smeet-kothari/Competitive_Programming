/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)
    {

        ListNode *pointer1=l1,*pointer2=l2;
        ListNode* head=new ListNode();
        ListNode *prev=NULL;
        int sum=0,carry=0;

        while(pointer1!=NULL || pointer2!=NULL || carry!=0) {
            if(pointer1!=NULL) {
                sum = pointer1->val;
                pointer1=pointer1->next;
            }
            if(pointer2!=NULL) {
                sum += pointer2->val;
                pointer2=pointer2->next;
            }
            ListNode* curr=new ListNode();
            if(prev!=NULL) prev->next=curr;
            else head=curr;
            curr->val=(sum+carry)%10;
            carry=(sum+carry)/10;
            prev=curr;
            sum=0;
        }

        return head;
    }
};